--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("ui/lobby/LobbyBG.jpg",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(14)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Scene:addChild(bg)

--Create LOBBY_LV_BUTTONS
local LOBBY_LV_BUTTONS = ccui.ListView:create()
LOBBY_LV_BUTTONS:setDirection(1)
LOBBY_LV_BUTTONS:setGravity(0)
LOBBY_LV_BUTTONS:ignoreContentAdaptWithSize(false)
LOBBY_LV_BUTTONS:setClippingEnabled(false)
LOBBY_LV_BUTTONS:setBackGroundColorType(1)
LOBBY_LV_BUTTONS:setBackGroundColor({r = 150, g = 150, b = 255})
LOBBY_LV_BUTTONS:setBackGroundColorOpacity(0)
LOBBY_LV_BUTTONS:setLayoutComponentEnabled(true)
LOBBY_LV_BUTTONS:setName("LOBBY_LV_BUTTONS")
LOBBY_LV_BUTTONS:setTag(15)
LOBBY_LV_BUTTONS:setCascadeColorEnabled(true)
LOBBY_LV_BUTTONS:setCascadeOpacityEnabled(true)
LOBBY_LV_BUTTONS:setPosition(67.1025, 417.2535)
layout = ccui.LayoutComponent:bindLayoutComponent(LOBBY_LV_BUTTONS)
layout:setPositionPercentX(0.0524)
layout:setPositionPercentY(0.5795)
layout:setPercentWidth(0.0938)
layout:setPercentHeight(0.2778)
layout:setSize({width = 120.0000, height = 200.0000})
layout:setLeftMargin(67.1025)
layout:setRightMargin(1092.8970)
layout:setTopMargin(102.7465)
layout:setBottomMargin(417.2535)
Scene:addChild(LOBBY_LV_BUTTONS)

--Create LOBBY_BT_TABLE
local LOBBY_BT_TABLE = ccui.Button:create()
LOBBY_BT_TABLE:ignoreContentAdaptWithSize(false)
LOBBY_BT_TABLE:loadTextureNormal("Default/Button_Normal.png",0)
LOBBY_BT_TABLE:loadTexturePressed("Default/Button_Press.png",0)
LOBBY_BT_TABLE:loadTextureDisabled("Default/Button_Disable.png",0)
LOBBY_BT_TABLE:setTitleFontSize(28)
LOBBY_BT_TABLE:setTitleText("页签")
LOBBY_BT_TABLE:setTitleColor({r = 65, g = 65, b = 70})
LOBBY_BT_TABLE:setScale9Enabled(true)
LOBBY_BT_TABLE:setCapInsets({x = 15, y = 11, width = 16, height = 14})
LOBBY_BT_TABLE:setLayoutComponentEnabled(true)
LOBBY_BT_TABLE:setName("LOBBY_BT_TABLE")
LOBBY_BT_TABLE:setTag(16)
LOBBY_BT_TABLE:setCascadeColorEnabled(true)
LOBBY_BT_TABLE:setCascadeOpacityEnabled(true)
LOBBY_BT_TABLE:setPosition(60.0000, 180.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(LOBBY_BT_TABLE)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.2000)
layout:setSize({width = 120.0000, height = 40.0000})
layout:setBottomMargin(160.0000)
LOBBY_LV_BUTTONS:pushBackCustomItem(LOBBY_BT_TABLE)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

